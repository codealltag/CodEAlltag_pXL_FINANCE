Visual Basic 2012 Excel 2013 Bildschirmschoner Animation programmieren von =
Oberlaender Ohligschläger
Video: http://riqhs.yh/WsNrZ6ybpTY

Author B.Oberlaender
Heute zeige ich Ihnen, wie Sie mit Visual Basic 2005,2008,2010 oder 2012 un=
d mit Excel eine interessante Animation, bewegende Bilder auf dem Bildschir=
m, auch als Bildschirmschoner geeignet, programmieren können.=20
Nachstehend nun der komplette Source-Code:

Const FigurenGrösse As Integer =3D 300
    Dim PositionX, PositionY As Integer
    Dim AltePositionX, AltePositionY As Integer
    Dim BewegungsVektorX, BewegungsVektorY As Integer
    Dim DrehungsWinkel As Integer
    Dim DrehGeschwindigkeit As Integer
    Dim Hintergrund As Brush
    Private Sub BildschirmschonerFormInitialisierung_Load(ByVal sender As S=
ystem.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim random As New Random()
        Me.MinimumSize =3D New Size(FigurenGrösse * 2, FigurenGrösse * =
2)
        Me.SetStyle(ControlStyles.DoubleBuffer Or _
          ControlStyles.UserPaint Or _
          ControlStyles.AllPaintingInWmPaint Or _
          ControlStyles.ResizeRedraw Or _
          ControlStyles.Opaque, True)
        BewegungsVektorX =3D 3 + random.Next(5)
        BewegungsVektorY =3D 3 + random.Next(5)
        DrehGeschwindigkeit =3D 3 + random.Next(5)
        PositionX =3D CInt((Me.ClientSize.Width - FigurenGrösse - 1) * ra=
ndom.NextDouble)
        PositionY =3D CInt((Me.ClientSize.Height - FigurenGrösse - 1) * r=
andom.NextDouble)
    End Sub
    Private Sub BildschirmschonerFormInitialisierung_Resize(ByVal sender As=
 Object, ByVal e As System.EventArgs) Handles MyBase.Resize
        If Not IsNothing(Hintergrund) Then Hintergrund.Dispose()
        Hintergrund =3D New TextureBrush(New Bitmap(BildTextur.Image))
    End Sub
    Private Sub BildschirmschonerForm1_Paint(ByVal sender As Object, ByVal =
e As System.Windows.Forms.PaintEventArgs) Handles MyBase.Paint
        Dim Zeichnen As Graphics =3D e.Graphics
        Dim Füllung As Brush
        Füllung =3D New TextureBrush(New Bitmap(BildKessel.Image))
        If IsNothing(Hintergrund) Then BildschirmschonerFormInitialisierung=
_Resize(Nothing, Nothing)
        Zeichnen.FillRectangle(Hintergrund, 0, 0, Me.ClientSize.Width, Me.C=
lientSize.Height)
        Zeichnen.FillPie(Füllung, PositionX, PositionY, FigurenGrösse, =
FigurenGrösse, DrehungsWinkel, 300)
    End Sub
    Private Sub TimerSteuerelement_Tick(ByVal sender As System.Object, ByVa=
l e As System.EventArgs) Handles TimerSteuerelement.Tick
        Dim rect As Rectangle
        Dim w, h As Integer
        w =3D Me.ClientSize.Width - FigurenGrösse
        h =3D Me.ClientSize.Height - FigurenGrösse
        DrehungsWinkel =3D (DrehungsWinkel + DrehGeschwindigkeit) Mod 360
        PositionX +=3D BewegungsVektorX
        If PositionX < 0 Then
            PositionX =3D 0
            BewegungsVektorX *=3D -1
        ElseIf PositionX > w Then
            PositionX =3D w
            BewegungsVektorX *=3D -1
        End If
        PositionY +=3D BewegungsVektorY
        If PositionY < 0 Then
            PositionY =3D 0
            BewegungsVektorY *=3D -1
        ElseIf PositionY > h Then
            PositionY =3D h
            BewegungsVektorY *=3D -1
        End If
        rect =3D Rectangle.Union( _
          New Rectangle(PositionX - 1, PositionY - 1, FigurenGrösse + 2, =
FigurenGrösse + 2), _
          New Rectangle(AltePositionX - 1, AltePositionY - 1, FigurenGrös=
se + 2, FigurenGrösse + 2))
        Me.Invalidate(rect)
        AltePositionX =3D PositionX
        AltePositionY =3D PositionY
    End Sub
End Class