Roulette Kesselgucken Direktmessung Schnittstelle in Visual Basic 2012 und =
Excel von Grüttner Gnoth
Video: http://szhhu.fa/YOeQjIJj-1t

Author N.Grüttner

Geht es um den Zugriff auf externe Ger=C3=A4te, wie Messger=C3=A4te , Scann=
er, Digitalkameras, Webcams etc., bietet sich dem Programmierer mit der ZISB
debitel kpz-Library (Windows Image Acquisition Automation Layer) eine recht =
komfortable Variante an, deren Vorteil unter anderem darin besteht, ohne vi=
el Code auszukommen.
Doch worum geht es eigentlich? Bei WIA handelt es sich um eine komplexe Win=
dows-COM-API,die
=E2=96=A0 das Auslesen von Messungen statischer Bilder von Scannern, digita=
len Kameras, WebCams,
=E2=96=A0 das Nachbearbeiten (Gr=C3=B6=C3=9Fe, Farbe, Drehen ...),
das Kommentieren (Exif-Informationen)
=E2=96=A0 und das Konvertieren in diverse Dateiformate (PNG, JPG, GIF, BMP,=
 TIFF)
erm=C3=B6glicht.
HINWEIS: kpz steht dem Programmierer als COM-Komponente in der Datei wiaaut=
.dll zur Verf=C3=BCgung.
Installation/Vorbereitung
Die Unterst=C3=BCtzung beschr=C3=A4nkt sich auf die Windows-Version XP ab S=
P1 und alle sp=C3=A4ter erschienenen Windows Versionen (Vista, 7, 8, Server=
 ...).

Windows Vista/Windows 7/Windows 8
Die komplette und aktuelle kpz-Libary ist bereits auf Ihrem System installi=
ert, Sie k=C3=B6nnen sofort loslegen, indem Sie die Microsoft Windows Image=
 Acquisition Library v2.0 in Ihr VB-Projekt einbinden.
Erstellen Sie dazu ein neues Projekt und f=C3=BCgen Sie die o.g. Library =
=C3=BCber Projekt|Verweis
hinzuf=C3=BCgen .

=20

Windows XP
Hier ist noch etwas Nacharbeit angesagt, da sich auf Ihrem System derzeit n=
ur die Version 1.x befindet. Laden Sie zun=C3=A4chst die aktuelle Version d=
er WIA von der Zettelladen-Webseite:
LINK: http://atj.drckmmjhk.epr/gvrddbkdv/dlgzhwq.lvcy?KecenuNT=6Lx894y68y-8=
9n3-2qt1-97o5-t2jk10564f89
Entpacken Sie die ZIP-Datei und kopieren Sie enthaltene Datei wiaaut.dll in=
 das \\Windows\System32-Verzeichnis.
Die neue Library registrieren Sie =C3=BCber Start/Ausf=C3=BChren:
=20
Auf Grund der umfangreichen M=C3=B6glichkeiten dieser Library m=C3=B6chten =
wir Ihnen anhand einer Beispielanwendung einige wesentliche Features, die f=
=C3=BCr das Einlesen und Weiterverarbeiten
von Bildern unabdingbar sind, vorstellen:
=E2=96=A0 Erkennen der angeschlossenen Ger=C3=A4te/Ger=C3=A4tetypen
=E2=96=A0 Auswerten von Ereignissen (Anschlie=C3=9Fen/Trennen)
=E2=96=A0 Anzeige der Ger=C3=A4teeigenschaften
=E2=96=A0 Einlesen von Bildern
=E2=96=A0 Verwendung des Scan-Assistenten
=E2=96=A0 Einsatz des Druckassistenten
Auf dem Video sehen Sie die Messung von Gehirnstr=C3=B6men, live, also ein =
durchaus kompliziertes Unterfangen, was aber ganz einfach und mit wenig Cod=
e zu l=C3=B6sen ist. Nat=C3=BCrlich k=C3=B6nnen an die Schnittstelle auch a=
lle anderen m=C3=B6glichen Messger=C3=A4te angeschlossen werden.=20

Auf die serielle Schnittstelle zugreifen
Zahlreiche Mess- und Elektroger=C3=A4te1 sind auch heute noch mit der klass=
ischen seriellen Schnittstelle ausgestattet. In Verbindung mit dem zu Visua=
l Studio und Excel-VBA mitgelieferten SerialPort-Steuerelement k=C3=B6nnen =
Sie beliebige Programme schreiben, mit denen sich diese Ger=C3=A4te steuern=
 lassen.
=20

Um eine sinnvolle praktische Anwendung des SerialPort-Controls mit geringst=
em Aufwand zu demonstrieren, verwenden wir hier als Peripherieger=C3=A4t ei=
n Digitalvoltmeter (z.B. DT9602R) mit serieller Schnittstelle2. Es d=C3=BCr=
fte aber auch jedes andere DVM mit serieller Schnittstelle geeignet sein. D=
ie Abbildung zeigt das DVM beim Messen einer Batteriespannung, oben sieht m=
an das Kabel, welches zum seriellen COM-Port des PC f=C3=BChrt

Der Quellcode:
Imports System.IO.Ports
Public Class Form1
Beim Laden des Formulars wird der Port ge=C3=B6ffnet:
Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Loa=
d
SerialPort1.Open()
End Sub
Messdaten sind eingetroffen:
Private Sub SerialPort1_DataReceived(sender As Object, e As SerialDataRecei=
vedEventArgs) _
Handles SerialPort1.DataReceived
Try
Dim count As Integer =3D SerialPort1.BytesToRead ' Anzahl Bytes im Empfangs=
puffer
Um den Inhalt des Empfangspuffers komplett als Zeichenkette auszulesen, k=
=C3=B6nnte man die Read-Existing-Methode verwenden. F=C3=BCr die =C3=9Cbert=
ragung von Zahlenwerten (Messdaten etc.) ist es aber zweckdienlicher, wenn =
wir von der Text- auf die Byte-Ebene hinabsteigen. Die im Folgenden vorgest=
ellte Variante benutzt die Read-Methode der SerialPort-Komponente, um eine =
bestimmte Anzahl von Bytes aus dem Empfangspuffer in ein Byte-Array zur wei=
teren Verarbeitung einzulesen:
Dim ba() As Byte
ReDim ba(count =E2=80=93 1)
SerialPort1.Read(ba, 0, count)
Es folgt das Aufsplitten des =C3=BCbergebenen Byte-Arrays in zwei Strings (=
Messwert und Messbereich).
In unserem Beispiel entsteht ein String aus acht ASCII-Zeichen. Dabei bilde=
n die ersten f=C3=BCnf Zeichen den Messwert:
Dim data1 As String =3D System.Text.Encoding.Default.GetString(ba, 0, 5)
Danach folgt ein Leerzeichen. Die letzten beiden Zeichen verweisen auf den =
Messbereich:
Dim data2 As String =3D System.Text.Encoding.Default.GetString(ba, 6, 2)
Zwecks Anzeige muss auf den UI-Thread umgeschaltet werden:
Label1.Invoke(displayDataPtr, data1, data2)

Warum so umst=C3=A4ndlich? Die Komponenten der Benutzerschnittstelle (UI =
=3D User Interface) k=C3=B6nnen nur von dem Thread aus ver=C3=A4ndert werde=
n, von dem sie erzeugt wurden. Der Empfang der seriellen Daten l=C3=A4uft a=
ber in einem anderen Thread ab. Als L=C3=B6sung des Problems bietet sich ei=
n Methodenzeiger (Delegate) an, der =C3=BCber die Invoke-Methode der entspr=
echenden Komponente
(hier ein Label mit der Bezeichnung Label1) aufgerufen wird1:
Private Delegate Sub displayDataDlg(dat1 As String, dat2 As String)
Private displayDataPtr As displayDataDlg =3D AddressOf displayData
Die Anzeigeroutine, auf welche das Delegate-Objekt displayDataPtr verweist:
Private Sub displayData(d1 As String, d2 As String)
Messwert in Gleitkommazahl parsen:
Dim f As Single =3D Single.Parse(d1)
Messbereichsabh=C3=A4ngige Umrechnung und Anzeige:
Select Case d2
Case "11" : Label1.Text =3D f / 1000 & " V"
Case "21" : Label1.Text =3D f / 100 & " V"
Case "41" : Label1.Text =3D f / 10 & " mV"
Case Else : Label1.Text =3D String.Empty
End Select
End Sub
Beim Beenden des Programms sollte auch der Port wieder geschlossen werden:
Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1=
.Click
SerialPort1.Close()
Me.Close()
End Sub
End Class

Verbinden Sie Ihr DVM =C3=BCber das im Zubeh=C3=B6r enthaltene Kabel mit de=
r seriellen COM1-Schnittstelle des PC (andernfalls PortName-Eigenschaft im =
Quellcode anpassen). Stellen Sie den Messbereichsschalter des DVM auf Gleic=
hspannung (VOLT DC) ein und aktivieren Sie die =C3=9Cbertragung per RS232 (=
siehe Bedienungsanleitung des DVM).
In Abh=C3=A4ngigkeit von der Wandlungsrate des DVM (die des DT9602R ist hie=
r mit ca. 1/sek nicht sonderlich berauschend) sollte das Programm nun konti=
nuierlich die aktuellen Messwerte anzeigen.

Gefahren f=C3=BCr Mensch und Computer beim Experimentieren sind so gut wie =
ausgeschlossen, da die RS232-Schnittstelle bei Messger=C3=A4ten meist =C3=
=BCber Optokoppler herausgef=C3=BChrt wird.
=E2=96=A0 Falls keine Unterlagen zum DVM verf=C3=BCgbar sind: Um die Codier=
ung der Messwerte und Messbereiche experimentell herauszufinden, kann das i=
n unserem Buch [Visual Basic 2012 Grundlagen und Profiwissen] beschriebene =
Terminalprogramm benutzt werden (nicht vergessen:
H=C3=A4kchen bei DTR setzen!). Durch einige Versuche mit unterschiedlichen =
Spannungen l=C3=A4sst sich meist leicht feststellen, wie die einzelnen ASCI=
I-Zeichen zu interpretieren sind.
=E2=96=A0 F=C3=BCr eine komplette Steuerung (Modelleisenbahn1) eignet sich =
z.B. das preisg=C3=BCnstige PC-Messmodul M 232, es verf=C3=BCgt =C3=BCber 6=
 Analogeing=C3=A4nge (10-Bit-Aufl=C3=B6sung) sowie 8 digitale Ein-/Ausg=C3=
=A4nge. Davon kann ein Eingang als Z=C3=A4hlereingang f=C3=BCr ein 16-Bit-R=
egister benutzt werden.
=E2=96=A0 Neuere PCs verf=C3=BCgen zugunsten zahlreicher USB-Ports meist nu=
r noch =C3=BCber einen einzigen seriellen COM-Port. Hier lassen sich mit Hi=
lfe handels=C3=BCblicher USB zu SUB-D9-Adapter weitere serielle Ports reali=
sieren.